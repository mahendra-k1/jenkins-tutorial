pipeline {
    agent any

    environment {
        TF_VERSION = "1.9.6"
        TF_BIN = "/usr/local/bin/terraform"
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/mahendra-k1/tf-create-resources'
            }
        }

        stage('Install Terraform') {
            steps {
                sh '''
                    echo "\033[1;34mInstalling Terraform ${TF_VERSION}...\033[0m"
                    wget -q https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip
                    unzip -o terraform_${TF_VERSION}_linux_amd64.zip -d /usr/local/bin/
                    terraform version
                '''
            }
        }

        stage('Clean Terraform Cache') {
            steps {
                sh '''
                    echo "\033[1;33mCleaning Terraform cache...\033[0m"
                    rm -rf .terraform .terraform.lock.hcl
                    mkdir -p $WORKSPACE/.terraform.d/plugin-cache
                '''
            }
        }

        stage('Terraform Init & Apply') {
            steps {
                withCredentials([
                    string(credentialsId: 'azure-subscription-id', variable: 'TF_VAR_subscription_id'),
                    string(credentialsId: 'azure-client-id', variable: 'TF_VAR_client_id'),
                    string(credentialsId: 'azure-client-secret', variable: 'TF_VAR_client_secret'),
                    string(credentialsId: 'azure-tenant-id', variable: 'TF_VAR_tenant_id')
                ]) {
                    sh '''
                        terraform init -upgrade
                        terraform plan
                        terraform apply -auto-approve
                    '''
                }
            }
        }
    }
}
